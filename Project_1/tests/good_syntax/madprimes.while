{-
  Contributed by Fall 2023 Team PSL
  Indebted to team C-=-1
  Akhil Reddy Alasandagutti
  Akil Andrews
  Nicholas Bacon
  Christopher Pitts
  And to Sheng Zhong
-}
input := W;
mod := input;
while not[mod=1 or mod=0] do
    mod:=mod-2
od;
if mod = 1 then
    input:= input - 2
else
    input:= input - 1
fi;
i := input;
stop1 := 0;
while i >= 2 and stop1 = 0 do
    sqrt := 1;
    while sqrt*sqrt <=i do
       sqrt:=sqrt+1
    od;
    j := 3;
    stop := 0;
    while j <= sqrt and stop = 0 do
        mod := i;
        while  mod > 0 do
            mod:=mod-j
        od;
        if mod = 0 then
           stop := 1
        else
            j := j+ 2
        fi
    od;
     if j > sqrt then
        stop1 := 1
     else
        i := i - 2
     fi
od;
closestprime := i;
output := 0;
W := closestprime;
n := 2;
i := 0;
weights0 := 15;
val0 := 9;
weights1 := 13;
val1 := 10;
knapsack0 := 0;
knapsack1 := 0;
knapsack2 := 0;
knapsack3 := 0;
knapsack4 := 0;
knapsack5 := 0;
knapsack6 := 0;
knapsack7 := 0;
knapsack8 := 0;
knapsack9 := 0;
knapsack10 := 0;
knapsack11 := 0;
knapsack12 := 0;
knapsack13 := 0;
knapsack14 := 0;
knapsack15 := 0;
knapsack16 := 0;
knapsack17 := 0;
knapsack18 := 0;
knapsack19 := 0;
knapsack20 := 0;
knapsack21 := 0;
knapsack22 := 0;
knapsack23 := 0;
knapsack24 := 0;
knapsack25 := 0;
knapsack26 := 0;
knapsack27 := 0;
knapsack28 := 0;
knapsack29 := 0;
knapsack30 := 0;
knapsack31 := 0;
knapsack32 := 0;
knapsack33 := 0;
while i*17 <= W do
	 	w := 1;
	 	 	if knapsack0 + val0 * w > knapsack15 then
	 	 	 	knapsack15 := knapsack0 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack0 + val0 * w > knapsack30 then
	 	 	 	knapsack30 := knapsack0 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack1 + val0 * w > knapsack16 then
	 	 	 	knapsack16 := knapsack1 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack1 + val0 * w > knapsack31 then
	 	 	 	knapsack31 := knapsack1 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack2 + val0 * w > knapsack17 then
	 	 	 	knapsack17 := knapsack2 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack2 + val0 * w > knapsack32 then
	 	 	 	knapsack32 := knapsack2 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack3 + val0 * w > knapsack18 then
	 	 	 	knapsack18 := knapsack3 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack3 + val0 * w > knapsack33 then
	 	 	 	knapsack33 := knapsack3 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack4 + val0 * w > knapsack19 then
	 	 	 	knapsack19 := knapsack4 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack5 + val0 * w > knapsack20 then
	 	 	 	knapsack20 := knapsack5 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack6 + val0 * w > knapsack21 then
	 	 	 	knapsack21 := knapsack6 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack7 + val0 * w > knapsack22 then
	 	 	 	knapsack22 := knapsack7 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack8 + val0 * w > knapsack23 then
	 	 	 	knapsack23 := knapsack8 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack9 + val0 * w > knapsack24 then
	 	 	 	knapsack24 := knapsack9 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack10 + val0 * w > knapsack25 then
	 	 	 	knapsack25 := knapsack10 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack11 + val0 * w > knapsack26 then
	 	 	 	knapsack26 := knapsack11 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack12 + val0 * w > knapsack27 then
	 	 	 	knapsack27 := knapsack12 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack13 + val0 * w > knapsack28 then
	 	 	 	knapsack28 := knapsack13 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack14 + val0 * w > knapsack29 then
	 	 	 	knapsack29 := knapsack14 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack15 + val0 * w > knapsack30 then
	 	 	 	knapsack30 := knapsack15 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack16 + val0 * w > knapsack31 then
	 	 	 	knapsack31 := knapsack16 + val0 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack0 + val1 * w > knapsack13 then
	 	 	 	knapsack13 := knapsack0 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack0 + val1 * w > knapsack26 then
	 	 	 	knapsack26 := knapsack0 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack1 + val1 * w > knapsack14 then
	 	 	 	knapsack14 := knapsack1 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack1 + val1 * w > knapsack27 then
	 	 	 	knapsack27 := knapsack1 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack2 + val1 * w > knapsack15 then
	 	 	 	knapsack15 := knapsack2 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack2 + val1 * w > knapsack28 then
	 	 	 	knapsack28 := knapsack2 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack3 + val1 * w > knapsack16 then
	 	 	 	knapsack16 := knapsack3 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack3 + val1 * w > knapsack29 then
	 	 	 	knapsack29 := knapsack3 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack4 + val1 * w > knapsack17 then
	 	 	 	knapsack17 := knapsack4 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack4 + val1 * w > knapsack30 then
	 	 	 	knapsack30 := knapsack4 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack5 + val1 * w > knapsack18 then
	 	 	 	knapsack18 := knapsack5 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack5 + val1 * w > knapsack31 then
	 	 	 	knapsack31 := knapsack5 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack6 + val1 * w > knapsack19 then
	 	 	 	knapsack19 := knapsack6 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack6 + val1 * w > knapsack32 then
	 	 	 	knapsack32 := knapsack6 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack7 + val1 * w > knapsack20 then
	 	 	 	knapsack20 := knapsack7 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	 	if knapsack7 + val1 * w > knapsack33 then
	 	 	 	knapsack33 := knapsack7 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack8 + val1 * w > knapsack21 then
	 	 	 	knapsack21 := knapsack8 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack9 + val1 * w > knapsack22 then
	 	 	 	knapsack22 := knapsack9 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack10 + val1 * w > knapsack23 then
	 	 	 	knapsack23 := knapsack10 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack11 + val1 * w > knapsack24 then
	 	 	 	knapsack24 := knapsack11 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack12 + val1 * w > knapsack25 then
	 	 	 	knapsack25 := knapsack12 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack13 + val1 * w > knapsack26 then
	 	 	 	knapsack26 := knapsack13 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack14 + val1 * w > knapsack27 then
	 	 	 	knapsack27 := knapsack14 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack15 + val1 * w > knapsack28 then
	 	 	 	knapsack28 := knapsack15 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	 	w := 1;
	 	 	if knapsack16 + val1 * w > knapsack29 then
	 	 	 	knapsack29 := knapsack16 + val1 * w
	 	 	else
 	 	 	 	skip
 	 	 	fi;
	 	 	w := w + 1;
	if output < knapsack0 and (i*17+0) <= W then
	 	output := knapsack0 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack1 and (i*17+1) <= W then
	 	output := knapsack1 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack2 and (i*17+2) <= W then
	 	output := knapsack2 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack3 and (i*17+3) <= W then
	 	output := knapsack3 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack4 and (i*17+4) <= W then
	 	output := knapsack4 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack5 and (i*17+5) <= W then
	 	output := knapsack5 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack6 and (i*17+6) <= W then
	 	output := knapsack6 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack7 and (i*17+7) <= W then
	 	output := knapsack7 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack8 and (i*17+8) <= W then
	 	output := knapsack8 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack9 and (i*17+9) <= W then
	 	output := knapsack9 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack10 and (i*17+10) <= W then
	 	output := knapsack10 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack11 and (i*17+11) <= W then
	 	output := knapsack11 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack12 and (i*17+12) <= W then
	 	output := knapsack12 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack13 and (i*17+13) <= W then
	 	output := knapsack13 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack14 and (i*17+14) <= W then
	 	output := knapsack14 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack15 and (i*17+15) <= W then
	 	output := knapsack15 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack16 and (i*17+16) <= W then
	 	output := knapsack16 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack17 and (i*17+17) <= W then
	 	output := knapsack17 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack18 and (i*17+18) <= W then
	 	output := knapsack18 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack19 and (i*17+19) <= W then
	 	output := knapsack19 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack20 and (i*17+20) <= W then
	 	output := knapsack20 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack21 and (i*17+21) <= W then
	 	output := knapsack21 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack22 and (i*17+22) <= W then
	 	output := knapsack22 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack23 and (i*17+23) <= W then
	 	output := knapsack23 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack24 and (i*17+24) <= W then
	 	output := knapsack24 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack25 and (i*17+25) <= W then
	 	output := knapsack25 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack26 and (i*17+26) <= W then
	 	output := knapsack26 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack27 and (i*17+27) <= W then
	 	output := knapsack27 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack28 and (i*17+28) <= W then
	 	output := knapsack28 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack29 and (i*17+29) <= W then
	 	output := knapsack29 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack30 and (i*17+30) <= W then
	 	output := knapsack30 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack31 and (i*17+31) <= W then
	 	output := knapsack31 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack32 and (i*17+32) <= W then
	 	output := knapsack32 
	else
 	 	 	 skip
 	 	 fi;
	if output < knapsack33 and (i*17+33) <= W then
	 	output := knapsack33 
	else
 	 	 	 skip
 	 	 fi;
	knapsack0 := knapsack17;
	 	knapsack17 := 0;
	knapsack1 := knapsack18;
	 	knapsack18 := 0;
	knapsack2 := knapsack19;
	 	knapsack19 := 0;
	knapsack3 := knapsack20;
	 	knapsack20 := 0;
	knapsack4 := knapsack21;
	 	knapsack21 := 0;
	knapsack5 := knapsack22;
	 	knapsack22 := 0;
	knapsack6 := knapsack23;
	 	knapsack23 := 0;
	knapsack7 := knapsack24;
	 	knapsack24 := 0;
	knapsack8 := knapsack25;
	 	knapsack25 := 0;
	knapsack9 := knapsack26;
	 	knapsack26 := 0;
	knapsack10 := knapsack27;
	 	knapsack27 := 0;
	knapsack11 := knapsack28;
	 	knapsack28 := 0;
	knapsack12 := knapsack29;
	 	knapsack29 := 0;
	knapsack13 := knapsack30;
	 	knapsack30 := 0;
	knapsack14 := knapsack31;
	 	knapsack31 := 0;
	knapsack15 := knapsack32;
	 	knapsack32 := 0;
	knapsack16 := knapsack33;
	 	knapsack33 := 0;
i := i+1 od;
range := output; 
endput := output;
result := 0;
while range >= 2 do
    count := 0;
    i := 2;

    while i * i <= range do
        k := range;
        if count > 0 then
            skip
        else
            while k >= 1 do
                if k * i = range then
                    count := count + 1
                else
                     skip
                fi;
                k := k - 1
            od
        fi;
        i := i + 1
    od;

    if count > 0 then
        skip
    else
        result := 1 + result
    fi;
    range := range - 1
od
--
;
output := result
